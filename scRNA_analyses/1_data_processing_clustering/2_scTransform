#R version 4.1.0
library(ggplot2)
library(cowplot)
library(reticulate)
library(tidyr)
library(reshape2)
library(plyr)
library(dplyr)
library(grid)
library(gridExtra)
library(Seurat)
library(sctransform)
library(data.table)

setwd("/scRNA_analyses/1_data_processing_clustering/")


# setup outdir ------------------------------------------------------------
## set to 1Gb
options(future.globals.maxSize = 1000 * 1024^2)
OUT_DIR <- c("sctransform_all_genes_regress_individual/")
dir.create(OUT_DIR)

# read in merged_filtered_labelled seurat object --------------------------
mergeAllCells <- readRDS(file = "merged_filtered_seuratObject.rds")
mergeAllCells$batchID <- factor(mergeAllCells$batchID)

# visualize clustering before integration ----------------------------------------------
mergeAllCells_temp <- SCTransform(mergeAllCells, vars.to.regress = c("percent.mt","batchID"), verbose = FALSE)
mergeAllCells_temp <- RunPCA(mergeAllCells_temp, npcs = 30)
mergeAllCells_temp <- RunUMAP(mergeAllCells_temp, dims = 1:30, seed.use = 2020)
mergeAllCells_temp <- FindNeighbors(mergeAllCells_temp, dims = 1:20)
mergeAllCells_temp <- FindClusters(mergeAllCells_temp, resolution = 0.5)
saveRDS(mergeAllCells_temp, file=paste0(OUT_DIR, "merged_seuratObject_UMAP_noIntegration.rds"))

pdf(paste0(OUT_DIR,"UMAP_noIntegration.pdf"), width=7, height=5)
print(DimPlot(mergeAllCells_temp, reduction = "umap", label = TRUE) + NoLegend())
dev.off()

pdf(paste0(OUT_DIR,"UMAP_noIntegration_split_timepoint.pdf"), width = 10, height = 4)
DimPlot(mergeAllCells_temp, reduction = "umap", split.by = "timepoint")
dev.off()

pdf(paste0(OUT_DIR,"UMAP_noIntegration_split_vaccination.pdf"), width = 10, height = 4)
DimPlot(mergeAllCells_temp, reduction = "umap", split.by = "vaccination")
dev.off()

mergeAllCells_temp_list <- SplitObject(mergeAllCells_temp, split.by = "vaccination")

pdf(paste0(OUT_DIR,"UMAP_noIntegration_BCG_split_timepoint.pdf"), width = 10, height = 4)
DimPlot(mergeAllCells_temp_list[[1]], reduction = "umap", split.by = "timepoint")
dev.off()

pdf(paste0(OUT_DIR,"UMAP_noIntegration_CTL_split_timepoint.pdf"), width = 10, height = 4)
DimPlot(mergeAllCells_temp_list[[2]], reduction = "umap", split.by = "timepoint")
dev.off()

  
# Split the merged object by timepoint ------------------------------------
mergeAllCells_list <- SplitObject(mergeAllCells, split.by = "timepoint")
#   Td0     Tm3
# 42,493   49,521

Td0 <- mergeAllCells_list[[1]]
Tm3 <- mergeAllCells_list[[2]]


# Split Tm3 into CTL and BCG ----------------------------------------------
Tm3_list <- SplitObject(Tm3, split.by = "vaccination")
#   BCG       CTL
#  37,999     11,522

Tm3_BCG <- Tm3_list[[1]]
Tm3_CTL <- Tm3_list[[2]]


# Create final seurat object list split 3 ways ----------------------------
mergeAllCells_list <- c(Td0, Tm3_BCG, Tm3_CTL)


# Run scTransform separately  ---------------------------------------------
#scTransform replaces NormalizeData(), ScaleData(), and FindVariableFeatures(); FindvariableFeatures() identifies features that are outliers on a mean-variance plot
mergeAllCells_list <- lapply(X = mergeAllCells_list, FUN = function(x) {
  x <- SCTransform(x, vars.to.regress = c("percent.mt","batchID"))
})
saveRDS(mergeAllCells_list, file = paste0(OUT_DIR,"mergedAllCells_seuratObject_afterSCTransform.rds"))


# Integration -------------------------------------------------------------
mergeAllCells_list <- readRDS(file="sctransform_all_genes_regress_individual/mergedAllCells_seuratObject_afterSCTransform.rds")

features <- SelectIntegrationFeatures(object.list = mergeAllCells_list, nfeatures = 3000)
mergeAllCells_list <- PrepSCTIntegration(object.list = mergeAllCells_list, anchor.features = features)

anchors <- FindIntegrationAnchors(object.list = mergeAllCells_list, normalization.method = "SCT", 
                                  anchor.features = features)

allCells_integrated <- IntegrateData(anchorset = anchors, normalization.method = "SCT", verbose=TRUE)
DefaultAssay(allCells_integrated) <- "integrated"

saveRDS(allCells_integrated, file = paste0(OUT_DIR,"mergedAllCells_seuratObject_withIntegration.rds"))

    

# Run standard clustering workflow ----------------------------------------
allCells_integrated <- RunPCA(allCells_integrated, npcs = 30)
allCells_integrated <- RunUMAP(allCells_integrated, dims = 1:30, seed.use = 2020)
allCells_integrated <- FindNeighbors(allCells_integrated, dims = 1:20)
allCells_integrated <- FindClusters(allCells_integrated, resolution = 0.5)

saveRDS(allCells_integrated, file = paste0(OUT_DIR,"mergedAllCells_seuratObject_withClusters_scale.rds"))
  
